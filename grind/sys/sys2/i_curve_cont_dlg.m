function  i_curve_cont_dlg(obj,icurve)
if isnumeric(obj)
    icurve=obj;
    obj=[];
end
if nargin==0||isempty(obj)
    variabs=evalin('base','whos');
    ndx=strcmp({variabs.class},'grind_matcont');
    if ~any(ndx)
        ndx=strcmp({variabs.class},'grind_coco2');
    end
    if sum(ndx)==1
        obj=evalin('base',variabs(ndx).name);
    else
        obj=[];
    end
end
if nargin<=1
    icurve=1;
end


if isempty(obj)
    obj=grind_matcont;
end
[~,curves]=obj.show;
if icurve>length(curves)
    icurve=length(curves);
end
if icurve<1
    icurve=1;
end
hfig=findobj(0,'tag','i_curve_matcon_dlg');
if ishandle(hfig)
    delete(hfig);
end
hfig = figure(...
    'Units','characters',...
    'PaperUnits',get(0,'defaultfigurePaperUnits'),...
    'Color',[0.941176470588235 0.941176470588235 0.941176470588235],...
    'IntegerHandle','off',...
    'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
    'MenuBar','figure',...
    'Name','Inspect curves of continuation',...
    'NumberTitle','off',...
    'Position',[128.6 10.9230769230769 164.2 40.7692307692308],...
    'Resize','on',...
    'ResizeFcn',@doresize,...
    'HandleVisibility','on',...
    'UserData',[],...
    'Tag','i_curve_matcon_dlg',...
    'ToolBar','figure',...
    'CreateFcn',@(e,v)movegui('center'),...
    'Visible','on');


hax= axes(...
    'Parent',hfig,...
    'Position',[0.1 0.55 0.85 0.40],...
    'Tag','CurveAxes',...
    'UserData',[] );

uicontrol(...
    'Parent',hfig,...
    'Units','characters',...
    'FontUnits','pixels',...
    'BackgroundColor',[1 1 1],...
    'Callback',@curveselected,....
    'FontSize',10.6666666666667,...
    'Position',[17.4 12.2307692307692 64 1.53846153846154],...
    'String',curves,...
    'Tooltipstring','Select a calculated curve',...
    'Style','popupmenu',...
    'Value',icurve,...
    'Tag','CurvePopup');

uicontrol(...
    'Parent',hfig,...
    'Units','characters',...
    'FontUnits','pixels',...
    'FontSize',10.6666666666667,...
    'HorizontalAlignment','left',...
    'Position',[2.2 12.6923076923077 10.4 1.07692307692308],...
    'String','Curve:',...
    'Style','text',...
    'Tag','text1' );

uicontrol(...
    'Parent',hfig,...
    'Units','characters',...
    'FontUnits','pixels',...
    'BackgroundColor',[1 1 1],...
    'FontSize',10.6666666666667,...
    'HorizontalAlignment','left',...
    'Position',[18 7.23076923076923 25.6 1.69230769230769],...
    'String','',...
    'Tooltipstring','Edit the color of the curve (MATLAB code)',...
    'Callback',@coloreditchanged,...
    'Style','edit',...
    'Tag','ColorEdit');

uicontrol(...
    'Parent',hfig,...
    'Units','characters',...
    'FontUnits','pixels',...
    'FontSize',10.6666666666667,...
    'HorizontalAlignment','left',...
    'Position',[3 7.38461538461539 10.4 1.07692307692308],...
    'String','Color:',...
    'Style','text',...
    'Tag','text2' );
uicontrol(...
    'Parent',hfig,...
    'Units','characters',...
    'FontUnits','pixels',...
    'FontSize',10.6666666666667,...
    'HorizontalAlignment','left',...
    'Position',[3 7.38461538461539+0.1 10.4 1.07692307692308],...
    'String','Settings:',...
    'Style','text',...
    'Tag','Settingstext' );

uitable(...
    'Parent',hfig,...
    'Units','characters',...
    'BackgroundColor',[1 1 1;0.96078431372549 0.96078431372549 0.96078431372549],...
    'ColumnFormat',{  [] [] },...
    'ColumnEditable',[false false],...
    'ColumnWidth',{  110 110 },...
    'Data',{  blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0) },...
    'Position',[17.4 0.5 50 5.2],.....
    'RowName',[],...
    'Tooltipstring','Inspect the non-default settings during the creation of the selected curve',...
    'ColumnName',{'Property','Value'},...
    'UserData',[],...
    'Tag','SettingsTable' );

uicontrol(...
    'Parent',hfig,...
    'Units','characters',...
    'FontUnits','pixels',...
    'FontSize',10.6666666666667,...
    'HorizontalAlignment','left',...
    'Position',[17.4 9.92307692307692 42.6 1.07692307692308],...
    'String',{  'Static Text' },...
    'Style','text',...
    'Tag','CurveDescrText' );

uitable(...
    'Parent',hfig,...
    'Units','characters',...
    'BackgroundColor',[1 1 1;0.96078431372549 0.96078431372549 0.96078431372549],...
    'ColumnFormat',{  [] [] },...
    'ColumnEditable',[false false],...
    'ColumnWidth',{  130 130 },...
    'Data',{  blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0) },...
    'Position',[83.8 2.92307692307692 58.2 10.8461538461538],...
    'Tooltipstring','Inspect the values of the selected point of the curve (including eigenvalues)',...
    'RowName',[],...
    'UserData',[],...
    'Tag','InspectTable' );

uicontrol(...
    'Parent',hfig,...
    'Units','characters',...
    'FontUnits','pixels',...
    'Callback',@deletepressed,...
    'FontSize',10.6666666666667,...
    'Position',[144 12.0769230769231 13.8 1.69230769230769],...
    'String','Delete',...
    'Tooltipstring','Delete the currently selected curve',...
    'Tag','DeleteBtn' );

uicontrol(...
    'Parent',hfig,...
    'Units','characters',...
    'FontUnits','pixels',...
    'FontSize',10.6666666666667,...
    'Position',[144 8.23076923076923 13.8 1.69230769230769],...
    'String','Help',...
    'Tag','HelpBtn');

uicontrol(...
    'Parent',hfig,...
    'Units','characters',...
    'FontUnits','pixels',...
    'Callback',@sliderchanged,...
    'BackgroundColor',[0.9 0.9 0.9],...
    'FontSize',10.6666666666667,...
    'Position',[83.8 0.692307692307692 56 1.53846153846154],...
    'Tooltipstring','Select the point of the curve to inspect',...
    'String',{  'Slider' },...
    'Style','slider',...
    'Tag','InspectSlider');

uicontrol(...
    'Parent',hfig,...
    'Units','characters',...
    'FontUnits','pixels',...
    'Callback',@(~,~)delete(hfig),...
    'FontSize',10.6666666666667,...
    'Position',[144 4.38461538461539 13.8 1.69230769230769],...
    'String','OK',...
    'Tooltipstring','Save changes and close',...
    'Tag','OKbutton' );

uicontrol(...
    'Parent',hfig,...
    'Units','characters',...
    'FontUnits','pixels',...
    'FontSize',10.6666666666667,...
    'HorizontalAlignment','left',...
    'Position',[84.4 14.6923076923077 42.6 1.07692307692308],...
    'String','Inspect curve:',...
    'Style','text',...
    'Tag','text4' );


curveselected(hfig);

    function curveselected(hObject,~)
        hfig=getparentfig(hObject);
        h=findobj(hfig,'Tag','CurvePopup');
        icurve=get(h,'value');
        curve=obj.curves(icurve);
        ud.fields=[obj.settings.derived.statevars;obj.settings.derived.allpars(curve.freepars)'];
        ud.values=obj.outfun('curvendx',icurve,'fun',ud.fields);
        ud.values=[(1:size(ud.values,1)).',ud.values];
        point=obj.points(obj.getndx('points','id',curve.frompoint));
        ud.p0=point.p0;
        ud.icurve=icurve;
        ud.s=curve.results.s;
        ud.fields=[{'No.'};ud.fields];
        %eigs=sprintf('eigenvalue(%d),',1:obj.settings.derived.ndim);
        %ud.fields=[ud.fields;regexp(eigs(1:end-1),'[,]','split')'];
        set(hfig,'userdata',ud');
        h=findobj(hfig,'Tag','CurveDescrText');
        set(h,'string',obj.curveprops(curve.propndx).descr);
        hax=findobj(hfig,'Tag','CurveAxes');
        delete(get(hax,'children'));
        obj.plot('hax',hax,'curvendx',icurve)
        % axis(hax,'auto');
        h=findobj(hfig,'Tag','InspectSlider');
        n=size(ud.values,1);
        set(h,'Min',1,'Max',n,'Value',1,'SliderStep',[1/n 10/n])
        set(hfig,'resizefcn',@doresize);
        h=findobj(hfig,'Tag','ColorEdit');
        if isnumeric(curve.color)
            c=mat2str(curve.color);
        else
            c=curve.color;
        end
        set(h,'string',c);
        sliderchanged(h);
        f1=fieldnames(curve.data.settings);
        f2=struct2cell(curve.data.settings);
        for i=1:length(f2)
            f2{i}=any2str(f2{i});
        end
        data=[f1,f2];
        data{end+1,1}='ctype';
        data{end,2}=curve.ctype;
        data{end+1,1}='frompoint';
        data{end,2}=curve.frompoint;
        h=findobj(hfig,'Tag','SettingsTable');
        set(h,'data',data);
    end
    function deletepressed(hObject,~)
        if strcmp(questdlg('Are you sure to delete this curve?', ...
                'Curve Dialog', 'Yes', 'No', 'No'),'Yes')
            hfig=getparentfig(hObject);
            h=findobj(hfig,'Tag','CurvePopup');
            icurve=get(h,'value');
            if ~isempty(icurve)&&icurve<=length(obj.curves)&&icurve>0
                obj.curves(icurve)=[];
            end
            [~,curves]=obj.show;
            if icurve>length(curves)
                icurve=length(curves);
            end
            if icurve>length(curves)
                icurve=length(curves);
            end
            set(h,'string',curves);
            set(h,'value',icurve);
            curveselected(hfig);
        end
    end
    function sliderchanged(hObject,~)
        hfig=getparentfig(hObject);
        ud=get(hfig,'userdata');
        h=findobj(hfig,'Tag','InspectSlider');
        aval=round(get(h,'value'));
        id='';
        f=find(aval==[ud.s.index]);
        if ~isempty(f)
            if isfield(ud.s(f).data,'id')&&~isempty(ud.s(f).data)
                id=ud.s(f).data.id;
            else
                id=ud.s(f).label;
            end
        end
        data=[ud.fields, num2cell(transpose(ud.values(aval,:)))];
        data=[data;{'label',id}];
        N0=ud.values(aval,2:1+obj.settings.derived.ndim).';
        p0=ud.p0;
        pars=ud.values(aval,obj.settings.derived.ndim+2:obj.settings.derived.ndim+1+numel(obj.curves(ud.icurve).freepars));
        p0(obj.curves(ud.icurve).freepars)=pars;
        if ~any(isnan(N0))
            jac_handle=i_getodehandle('coco_jac');
            J= jac_handle(N0,p0);
            eigenv=eig(J);
            eigs=sprintf('eigenvalue(%d),',1:obj.settings.derived.ndim);
            data2=[regexp(eigs(1:end-1),'[,]','split')',num2cell(eigenv)];
            data=[data;data2];
        end
        h=findobj(hfig,'Tag','InspectTable');
        set(h,'data',data);
    end
    function coloreditchanged(hObject,~)
        hfig=getparentfig(hObject);
        ud=get(hfig,'userdata');
        color=get(hObject,'string');
        c=str2num(color); %#ok<ST2NM>
        if isnan(c)
            obj.curves(ud.icurve).color=color;
        else
            obj.curves(ud.icurve).color=c;
        end
        curveselected(hObject);
    end
    function doresize(hobj,~)
        hfig=getparentfig(hobj);
        data={...
            'CurvePopup',[1 0 0 1],[65.25 119.25 229.125 15];...
            'text1',[1 0 0 1],[8.25 123.75 39 10.5];...
            'ColorEdit',[1 0 0 1],[67.5 70.5 96 16.5];...
            'text2',[1 0 0 1],[11.25 72 39 10.5];...
            'Settingstext',[1 0 0 1],[11.25 47 39 10.5];...
            'SettingsTable',[1 0 0 1],[65.25 4.875 187.5 50.7];...
            'CurveDescrText',[1 0 0 1],[65.25 96.75 159.75 10.5];...
            'InspectTable',[1 1 0 1],[303.375 28.5 229.125 105.75];...
            'DeleteBtn',[0 1 0 1],[540 117.75 51.75 16.5];...
            'HelpBtn',[0 1 0 1],[540 80.25 51.75 16.5];...
            'InspectSlider',[0 1 0 1],[303.375 6.75 229.125 15];...
            'OKbutton',[0 1 0 1],[540 42.75 51.75 16.5];...
            'text4',[0 1 0 1],[303.375 136 159.75 10.5]};
        
        i_resizedlg(hfig,data(:,1),data(:,2),data(:,3),[324.75 141 615.75 398.25]);
        i_resizedlg(hfig,'horizdistrib', {'CurvePopup','InspectTable'});
        pos1=get(findobj(hfig,'tag','CurvePopup'),'position');
        if ~isempty(pos1)
            pos2=get(findobj(hfig,'tag','ColorEdit'),'position');
            pos2(3)=pos1(3)*0.8;
            set(findobj(hfig,'tag','ColorEdit'),'position',pos2);
            pos2=get(findobj(hfig,'tag','SettingsTable'),'position');
            pos2(3)=pos1(3)*0.8;
            set(findobj(hfig,'tag','SettingsTable'),'position',pos2);
            
            pos1=get(findobj(hfig,'tag','InspectTable'),'position');
            if ~isempty(pos1)
                pos2=get(findobj(hfig,'tag','InspectSlider'),'position');
                pos2(1)=pos1(1);
                pos2(3)=pos1(3);
                set(findobj(hfig,'tag','InspectSlider'),'position',pos2)
                pos2=get(findobj(hfig,'tag','text4'),'position');
                pos2(1)=pos1(1);
                set(findobj(hfig,'tag','text4'),'position',pos2)
            end
        end
        i_adjustlabels(hfig,[],'label-text')
        
    end %maybe need to delete this

end