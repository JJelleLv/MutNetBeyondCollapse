function fig = i_plotdatadlg
hfig = figure('Color',[0.914 0.914 0.914], ...
    'MenuBar','none', ...
    'Name','Plot data', ...
    'NumberTitle','off', ...
    'PaperPosition',[18 180 576 432], ...
    'PaperType','A4', ...
    'PaperUnits','points', ...
    'Position',[422 281 522 433], ...
    'Tag','Fig1', ...
    'ToolBar','none',...
    'CreateFcn',@(h,evnt)movegui(h, 'center'));
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'BackgroundColor',[1 1 1], ...
    'HorizontalAlignment','left', ...
    'ListboxTop',0, ...
    'Position',[12.75 231 354 17.25], ...
    'Style','edit', ...
    'Tag','VarlistEdit');
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'BackgroundColor',[1 1 1], ...
    'HorizontalAlignment','left', ...
    'ListboxTop',0, ...
    'Max',10, ...
    'Position',[12.75 84.75 357.75 129], ...
    'Style','edit', ...
    'Tag','MatrixEdit');
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'Callback',@c_cancel, ...
    'ListboxTop',0, ...
    'Position',[270 14.25 100.5 18.75], ...
    'String','Cancel', ...
    'Tag','Pushbutton2');
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'BackgroundColor',[0.914 0.914 0.914], ...
    'HorizontalAlignment','left', ...
    'ListboxTop',0, ...
    'Position',[12.75 251.25 137.25 15], ...
    'String','Column description', ...
    'Style','text', ...
    'Tag','StaticText1');
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'Callback',@c_load, ...
    'ListboxTop',0, ...
    'Position',[269.25 294.75 101.25 18.75], ...
    'String','Load from file', ...
    'Tag','AdvancedButton');
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'BackgroundColor',[0.914 0.914 0.914], ...
    'HorizontalAlignment','left', ...
    'ListboxTop',0, ...
    'Position',[12.75 213 131.25 15], ...
    'String','Data', ...
    'Style','text', ...
    'Tag','StaticText1');
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'Callback',@c_paste, ...
    'ListboxTop',0, ...
    'Position',[269.25 271.5 101.25 18.75], ...
    'String','Paste', ...
    'Tag','AdvancedButton');
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'Callback',@c_plot, ...
    'ListboxTop',0, ...
    'Position',[270.75 39.75 101.25 18.75], ...
    'String','Create figure', ...
    'Tag','AdvancedButton');
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'BackgroundColor',[1 1 1], ...
    'ListboxTop',0, ...
    'Position',[105 63.75 121.5 15], ...
    'String',{'New'}, ...
    'Style','popupmenu', ...
    'Tag','figs', ...
    'Value', 1);
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'BackgroundColor',[1 1 1], ...
    'ListboxTop',0, ...
    'Max',5, ...
    'Position',[105 43.25 75.25 15], ...
    'String', {'line plot','scatterplot','surf','contourf'}, ...
    'Style','popupmenu', ...
    'Tag','graphtype', ...
    'Value', 1);
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'BackgroundColor',[1 1 1], ...
    'ListboxTop',0, ...
    'Position',[12.75 281.5 126 15], ...
    'String',{'X, Y1, Y2,.. ,Yn','Y, X1, X2,.. ,Xn','X, Y, Z','matrix'}, ...
    'Style','popupmenu', ...
    'Tag','dataformat', ...
    'Value', 1);
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'BackgroundColor',[0.914 0.914 0.914], ...
    'HorizontalAlignment','left', ...
    'ListboxTop',0, ...
    'Position',[12.75 298.75 81.75 15], ...
    'String','Format of data', ...
    'Style','text', ...
    'Tag','StaticText1');
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'BackgroundColor',[0.914 0.914 0.914], ...
    'HorizontalAlignment','left', ...
    'ListboxTop',0, ...
    'Position',[12.75 60.75 90 16.5], ...
    'String','Figure', ...
    'Style','text', ...
    'Tag','StaticText1');
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'BackgroundColor',[0.914 0.914 0.914], ...
    'HorizontalAlignment','left', ...
    'ListboxTop',0, ...
    'Position',[12.75 42.25 91.5 15], ...
    'String','Graph type', ...
    'Style','text', ...
    'Tag','StaticText1');
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'BackgroundColor',[0.914 0.914 0.914], ...
    'HorizontalAlignment','left', ...
    'ListboxTop',0, ...
    'Position',[12.75 23.75 72 15], ...
    'String','Legend?', ...
    'Style','text', ...
    'Tag','StaticText1');
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'BackgroundColor',[0.914 0.914 0.914], ...
    'HorizontalAlignment','left', ...
    'ListboxTop',0, ...
    'Position',[12.75 5.25 73.5 15], ...
    'String','Hold?', ...
    'Style','text', ...
    'Tag','StaticText1');
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'BackgroundColor',[1 1 1], ...
    'ListboxTop',0, ...
    'Max',2, ...
    'Position',[105 22.75 50.25 15], ...
    'String',{'On','Off'}, ...
    'Style','popupmenu', ...
    'Tag','legendonoff', ...
    'Value', 1);
uicontrol('Parent',hfig, ...
    'Units','points', ...
    'BackgroundColor',[1 1 1], ...
    'ListboxTop',0, ...
    'Max',2, ...
    'Position',[105 2.25 50.25 15], ...
    'String',{'On','Off'}, ...
    'Style','popupmenu', ...
    'Tag','Holdonoff', ...
    'Value', 1);
if nargout > 0
    fig = hfig;
end

fillfigs(gcf);
function c_plot(hobject,~)
hfig=getparentfig(hobject);
TAB = sprintf('\t');
%   LF = sprintf('\n');
h1=findobj(hfig,'tag','graphtype');
plots = get(h1, 'string');
graphtype = plots{get(h1, 'value')};
h1=findobj(hfig,'tag','dataformat');
forms = get(h1, 'string');
dataformat = forms{get(h1, 'value')};
h1=findobj(hfig,'tag','VarlistEdit');
answer{1} = get(h1, 'String');
h1=findobj(hfig,'tag','MatrixEdit');
answer{2} = get(h1, 'String');
l = length(answer{1}) + 1;
l2 = l - 1;
while l2 < l
    answer{1} = strrep(answer{1}, TAB, ' ');
    answer{1} = strrep(answer{1},'  ',' ');
    l = l2;
    l2 = length(answer{1});
end

s=['{''' strrep(strtrim(answer{1}),' ',''' ''') '''}'];
varlist = i_checkstr(memo2str(s, 0));
amatrix = i_checkstr(memo2str(answer{2}, 1));
if size(amatrix, 2) ~= length(varlist)
    warning('plotdata:ncols','Number of columns in varlist is different from matrix');
end

h=findobj(hfig,'tag','figs');
figno = get(h, 'value');
if figno == 1
    figure;
else
    figure(figno);
end

h1=findobj(hfig,'tag','Holdonoff');
if (get(h1, 'value') == 1)
    hold on
else
    hold off;
end

islineformat=strcmp(dataformat,'X, Y1, Y2,.. ,Yn')||strcmp(dataformat,'Y, X1, X2,.. ,Xn');
switch graphtype
    case 'scatterplot'
        if ~islineformat
            i_errordlg('Data type does not correspond with graph type');
            error('GRIND:plotdata:WrongType','Wrong datatype');
        end

        if strcmp(dataformat,'Y, X1, X2,.. ,Xn')
            plot(amatrix(:, 2:size(amatrix, 2)),amatrix(:, 1), 'o')
        else
            plot(amatrix(:, 1), amatrix(:, 2:size(amatrix, 2)), 'o')
        end

    case 'line plot'
        if ~islineformat
            i_errordlg('Data type does not correspond with graph type');
            error('GRIND:plotdata:WrongType','Wrong datatype');
        end

        if strcmp(dataformat,'Y, X1, X2,.. ,Xn')
            plot(amatrix(:, 2:size(amatrix, 2)),amatrix(:, 1), '-')
        else
            plot(amatrix(:, 1), amatrix(:, 2:size(amatrix, 2)), '-')
        end

    case 'surf'
        if islineformat
            i_errordlg('Data type does not correspond with graph type');
            error('GRIND:plotdata:WrongType','Wrong datatype');
        end

        surf(amatrix);
    case 'contourf'
        if islineformat
            i_errordlg('Data type does not correspond with graph type');
            error('GRIND:plotdata:WrongType','Wrong datatype');
        end

        contourf(amatrix)
end

set(gca, 'FontSize', 14);
set(gca, 'LineWidth', 1);
set(gca, 'TickDir', 'out');
set(gca, 'Box', 'on');
h1=findobj(hfig,'tag','legendonoff');
if (get(h1, 'value') == 1)
    if (length(varlist) > 2)
        xlabel(varlist{1});
        legend(varlist{2:length(varlist)});
    elseif (length(varlist) == 2)
        xlabel(varlist{1});
        ylabel(varlist{2});
    end

end

fillfigs(hfig);
function c_load(hobject,~)
[FileName, PathName] = uigetfile('*.txt;*.dat', 'Enter name of TAB delimited file');
if FileName ~= 0
    f = [PathName FileName];
    fillmat(getparentfig(hobject),tabread(f, 0), tabread(f, 1));
end

function c_paste(hobject,~)
fillmat(getparentfig(hobject),varpaste, varpaste('numeric'));
function c_cancel(~,~)
close;


function fillmat(hfig,mat0, mat1)
mat = mat0;
vars = [];
if iscell(mat)
    vars = '';
    if ischar(mat{1, 1})
        for i = 1:size(mat, 2)
            if ischar(mat{1, i})
                vars = sprintf('%s %s', vars, mat{1, i});
            end

        end

        mat = mat1;
        mat = mat(2:size(mat, 1), :);
    else
        mat = mat1;
    end

end

if ~isempty(vars)
    h=findobj(hfig,'tag','VarlistEdit');
    set(h, 'string', vars);
end

s = num2str(mat);
h=findobj(hfig,'tag','MatrixEdit');
set(h, 'string', s);

function fillfigs(f)
figs = get(0, 'children');
pops = {'New'};
j = 1;
for i = 1:length(figs)
    s = get(figs(i), 'name');
    if ~strcmp(s, 'Plot data')
        if isempty(s)
            s = sprintf('Figure No. %g', figs(i));
        end

        j = j + 1;
        pops{j} = s;
    end

end

h=findobj(f,'tag','figs');
%set(h,'max',length(s));
set(h, 'string', pops);

function s = memo2str(answer, addmatrixthings)
s1 = i_memo2cell(answer);
%s = '';
f=strfind(s1{1}, '=');
if ~isempty(f)
    s1{1} = s1{1}(f(1) + 1:length(s1{1}));
end

for i = 1:length(s1)
    f = strfind(s1{i},'...');
    if ~isempty(f)
        s1{i} = s1{i}(1:f(1) - 1);
    end

    if addmatrixthings
        f = strfind(s1{i}, ';');
        if isempty(f)
            s1{i}=[s1{i} ';'];
        end

    end

end

s=sprintf('%s',s1{:});
if addmatrixthings && ~strcontains(s, '[')
    s=['[' s ']'];
end




